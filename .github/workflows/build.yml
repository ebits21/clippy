name: Build Clippy Binaries (Windows + Linux)

on:
  push:
    tags:
      - 'v*'  # build only on version tags

jobs:
  build:
    name: Build for ${{ matrix.goos }} ${{ matrix.goarch }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - goos: windows
            goarch: amd64
          - goos: linux
            goarch: amd64

    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'  # specify a recent stable version

      - name: 📦 Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          EXT=""
          if [ "$GOOS" = "windows" ]; then
            EXT=".exe"
          fi
          OUTPUT=dist/clippy-${GOOS}-${GOARCH}${EXT}
          echo "Building $OUTPUT"
          go build -o "$OUTPUT" main.go

      - name: 📤 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: clippy-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/clippy-${{ matrix.goos }}-${{ matrix.goarch }}*
          
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: ⬇️ Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: 🗃️ List files
        run: ls -R dist

      - name: 🚀 Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*