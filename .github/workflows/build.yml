name: Build Clipboard Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64  # Windows ARM is uncommon and not needed

    steps:
      - name: ðŸ“¥ Checkout source
        uses: actions/checkout@v4

      - name: ðŸ›  Set up latest Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: ðŸ“¦ Tidy and install dependencies
        run: go mod tidy

      - name: ðŸ§± Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi
          go build -o clippy-${{ matrix.goos }}-${{ matrix.goarch }}$EXT

      - name: ðŸ“¤ Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: clippy-${{ matrix.goos }}-${{ matrix.goarch }}
          path: clippy-${{ matrix.goos }}-${{ matrix.goarch }}*